// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.82.6.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.io.dart' if (dart.library.html) 'bridge_generated.web.dart';

abstract class MystikoLibBridge {
  /// mystiko api
  Future<Uint8List> initialize({required Uint8List options, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kInitializeConstMeta;

  Future<bool> isInitialized({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIsInitializedConstMeta;

  Future<void> destroy({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDestroyConstMeta;

  /// config api
  Future<Uint8List> getConfig({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetConfigConstMeta;

  Future<Uint8List> findDefaultCircuit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindDefaultCircuitConstMeta;

  Future<Uint8List> findCircuit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindCircuitConstMeta;

  Future<Uint8List> findChain({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindChainConstMeta;

  Future<Uint8List> findPeerChains({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindPeerChainsConstMeta;

  Future<Uint8List> findAssetSymbols({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindAssetSymbolsConstMeta;

  Future<Uint8List> findBridge({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindBridgeConstMeta;

  Future<Uint8List> findBridges({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindBridgesConstMeta;

  Future<Uint8List> findDepositContract({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindDepositContractConstMeta;

  Future<Uint8List> findDepositContractByAddress({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindDepositContractByAddressConstMeta;

  Future<Uint8List> findPoolContract({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindPoolContractConstMeta;

  Future<Uint8List> findPoolContracts({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindPoolContractsConstMeta;

  Future<Uint8List> findPoolContractByAddress({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindPoolContractByAddressConstMeta;

  Future<Uint8List> findContractByAddress({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindContractByAddressConstMeta;

  Future<Uint8List> getTransactionUrl({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetTransactionUrlConstMeta;

  /// account api
  Future<Uint8List> createAccount({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCreateAccountConstMeta;

  Future<Uint8List> count({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCountConstMeta;

  Future<Uint8List> countAll({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCountAllConstMeta;

  Future<Uint8List> find({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindConstMeta;

  Future<Uint8List> findById({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindByIdConstMeta;

  Future<Uint8List> findByShieldedAddress({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindByShieldedAddressConstMeta;

  Future<Uint8List> findByPublicKey({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindByPublicKeyConstMeta;

  Future<Uint8List> updateById({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateByIdConstMeta;

  Future<Uint8List> updateByShieldedAddress({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateByShieldedAddressConstMeta;

  Future<Uint8List> updateByPublicKey({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateByPublicKeyConstMeta;

  Future<Uint8List> updateEncryption({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateEncryptionConstMeta;

  Future<Uint8List> exportSecretKeyById({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kExportSecretKeyByIdConstMeta;

  Future<Uint8List> exportSecretKeyByShieldedAddress({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kExportSecretKeyByShieldedAddressConstMeta;

  Future<Uint8List> exportSecretKeyByPublicKey({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kExportSecretKeyByPublicKeyConstMeta;

  /// deposit api
  Future<Uint8List> quoteDeposit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kQuoteDepositConstMeta;

  Future<Uint8List> summaryDeposit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSummaryDepositConstMeta;

  Future<Uint8List> createDeposit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCreateDepositConstMeta;

  Future<Uint8List> sendDeposit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSendDepositConstMeta;

  Future<Uint8List> sendDepositWithGrpc({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSendDepositWithGrpcConstMeta;

  Future<Uint8List> findDeposit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindDepositConstMeta;

  Future<Uint8List> findAllDeposit({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindAllDepositConstMeta;

  Future<Uint8List> findOneDeposit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindOneDepositConstMeta;

  Future<Uint8List> depositFindById({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositFindByIdConstMeta;

  Future<Uint8List> countDeposit({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCountDepositConstMeta;

  Future<Uint8List> countAllDeposit({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCountAllDepositConstMeta;

  Future<Uint8List> depositUpdate({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositUpdateConstMeta;

  Future<Uint8List> depositUpdateBatch({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositUpdateBatchConstMeta;

  Future<Uint8List> depositUpdateByFilter({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositUpdateByFilterConstMeta;

  Future<Uint8List> depositUpdateAll({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositUpdateAllConstMeta;

  Future<Uint8List> depositDelete({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositDeleteConstMeta;

  Future<Uint8List> depositDeleteBatch({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositDeleteBatchConstMeta;

  Future<Uint8List> depositDeleteByFilter({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositDeleteByFilterConstMeta;

  Future<Uint8List> depositDeleteAll({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDepositDeleteAllConstMeta;

  /// scanner api
  Future<Uint8List> scannerScan({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kScannerScanConstMeta;

  Future<Uint8List> scannerReset({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kScannerResetConstMeta;

  Future<Uint8List> balance({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kBalanceConstMeta;

  Future<Uint8List> assets({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kAssetsConstMeta;

  Future<Uint8List> chainAssets({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kChainAssetsConstMeta;

  /// spend api
  Future<Uint8List> quoteSpend({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kQuoteSpendConstMeta;

  Future<Uint8List> summarySpend({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSummarySpendConstMeta;

  Future<Uint8List> createSpend({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCreateSpendConstMeta;

  Future<Uint8List> sendSpend({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSendSpendConstMeta;

  Future<Uint8List> sendSpendWithGrpc({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSendSpendWithGrpcConstMeta;

  Future<Uint8List> findSpend({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindSpendConstMeta;

  Future<Uint8List> findAllSpend({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindAllSpendConstMeta;

  Future<Uint8List> findOneSpend({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindOneSpendConstMeta;

  Future<Uint8List> spendFindById({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendFindByIdConstMeta;

  Future<Uint8List> countSpend({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCountSpendConstMeta;

  Future<Uint8List> countAllSpend({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCountAllSpendConstMeta;

  Future<Uint8List> spendUpdate({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendUpdateConstMeta;

  Future<Uint8List> spendUpdateBatch({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendUpdateBatchConstMeta;

  Future<Uint8List> spendUpdateByFilter({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendUpdateByFilterConstMeta;

  Future<Uint8List> spendUpdateAll({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendUpdateAllConstMeta;

  Future<Uint8List> spendDelete({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendDeleteConstMeta;

  Future<Uint8List> spendDeleteBatch({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendDeleteBatchConstMeta;

  Future<Uint8List> spendDeleteByFilter({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendDeleteByFilterConstMeta;

  Future<Uint8List> spendDeleteAll({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSpendDeleteAllConstMeta;

  /// synchronizer api
  Future<Uint8List> chainSyncedBlock({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kChainSyncedBlockConstMeta;

  Future<Uint8List> contractSyncedBlock({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kContractSyncedBlockConstMeta;

  Future<Uint8List> status({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kStatusConstMeta;

  Future<Uint8List> synchronizerSync({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSynchronizerSyncConstMeta;

  Future<Uint8List> synchronizerReset({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSynchronizerResetConstMeta;

  /// wallet api
  Future<Uint8List> createWallet({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCreateWalletConstMeta;

  Future<Uint8List> checkCurrent({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCheckCurrentConstMeta;

  Future<Uint8List> checkPassword({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCheckPasswordConstMeta;

  Future<Uint8List> updatePassword({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdatePasswordConstMeta;

  Future<Uint8List> exportMnemonicPhrase({required Uint8List request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kExportMnemonicPhraseConstMeta;
}

class MystikoLibBridgeImpl implements MystikoLibBridge {
  final MystikoLibBridgePlatform _platform;
  factory MystikoLibBridgeImpl(ExternalLibrary dylib) => MystikoLibBridgeImpl.raw(MystikoLibBridgePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory MystikoLibBridgeImpl.wasm(FutureOr<WasmModule> module) => MystikoLibBridgeImpl(module as ExternalLibrary);
  MystikoLibBridgeImpl.raw(this._platform);
  Future<Uint8List> initialize({required Uint8List options, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(options);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_initialize(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kInitializeConstMeta,
      argValues: [
        options
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kInitializeConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "initialize",
        argNames: [
          "options"
        ],
      );

  Future<bool> isInitialized({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_is_initialized(port_),
      parseSuccessData: _wire2api_bool,
      parseErrorData: null,
      constMeta: kIsInitializedConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIsInitializedConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "is_initialized",
        argNames: [],
      );

  Future<void> destroy({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_destroy(port_),
      parseSuccessData: _wire2api_unit,
      parseErrorData: null,
      constMeta: kDestroyConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDestroyConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "destroy",
        argNames: [],
      );

  Future<Uint8List> getConfig({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_config(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kGetConfigConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetConfigConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "get_config",
        argNames: [],
      );

  Future<Uint8List> findDefaultCircuit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_default_circuit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindDefaultCircuitConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindDefaultCircuitConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_default_circuit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findCircuit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_circuit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindCircuitConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindCircuitConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_circuit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findChain({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_chain(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindChainConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindChainConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_chain",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findPeerChains({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_peer_chains(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindPeerChainsConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindPeerChainsConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_peer_chains",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findAssetSymbols({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_asset_symbols(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindAssetSymbolsConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindAssetSymbolsConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_asset_symbols",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findBridge({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_bridge(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindBridgeConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindBridgeConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_bridge",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findBridges({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_bridges(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindBridgesConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindBridgesConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_bridges",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findDepositContract({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_deposit_contract(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindDepositContractConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindDepositContractConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_deposit_contract",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findDepositContractByAddress({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_deposit_contract_by_address(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindDepositContractByAddressConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindDepositContractByAddressConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_deposit_contract_by_address",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findPoolContract({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_pool_contract(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindPoolContractConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindPoolContractConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_pool_contract",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findPoolContracts({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_pool_contracts(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindPoolContractsConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindPoolContractsConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_pool_contracts",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findPoolContractByAddress({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_pool_contract_by_address(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindPoolContractByAddressConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindPoolContractByAddressConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_pool_contract_by_address",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findContractByAddress({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_contract_by_address(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindContractByAddressConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindContractByAddressConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_contract_by_address",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> getTransactionUrl({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_transaction_url(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kGetTransactionUrlConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetTransactionUrlConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "get_transaction_url",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> createAccount({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_create_account(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCreateAccountConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateAccountConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "create_account",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> count({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_count(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCountConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCountConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "count",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> countAll({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_count_all(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCountAllConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCountAllConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "count_all",
        argNames: [],
      );

  Future<Uint8List> find({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findById({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_by_id(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindByIdConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindByIdConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_by_id",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findByShieldedAddress({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_by_shielded_address(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindByShieldedAddressConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindByShieldedAddressConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_by_shielded_address",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findByPublicKey({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_by_public_key(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindByPublicKeyConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindByPublicKeyConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_by_public_key",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> updateById({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_update_by_id(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kUpdateByIdConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateByIdConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "update_by_id",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> updateByShieldedAddress({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_update_by_shielded_address(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kUpdateByShieldedAddressConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateByShieldedAddressConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "update_by_shielded_address",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> updateByPublicKey({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_update_by_public_key(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kUpdateByPublicKeyConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateByPublicKeyConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "update_by_public_key",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> updateEncryption({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_update_encryption(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kUpdateEncryptionConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateEncryptionConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "update_encryption",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> exportSecretKeyById({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_export_secret_key_by_id(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kExportSecretKeyByIdConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kExportSecretKeyByIdConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "export_secret_key_by_id",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> exportSecretKeyByShieldedAddress({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_export_secret_key_by_shielded_address(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kExportSecretKeyByShieldedAddressConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kExportSecretKeyByShieldedAddressConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "export_secret_key_by_shielded_address",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> exportSecretKeyByPublicKey({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_export_secret_key_by_public_key(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kExportSecretKeyByPublicKeyConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kExportSecretKeyByPublicKeyConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "export_secret_key_by_public_key",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> quoteDeposit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_quote_deposit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kQuoteDepositConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kQuoteDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "quote_deposit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> summaryDeposit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_summary_deposit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSummaryDepositConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSummaryDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "summary_deposit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> createDeposit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_create_deposit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCreateDepositConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "create_deposit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> sendDeposit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_deposit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSendDepositConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "send_deposit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> sendDepositWithGrpc({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_deposit_with_grpc(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSendDepositWithGrpcConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendDepositWithGrpcConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "send_deposit_with_grpc",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findDeposit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_deposit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindDepositConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_deposit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findAllDeposit({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_all_deposit(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindAllDepositConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindAllDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_all_deposit",
        argNames: [],
      );

  Future<Uint8List> findOneDeposit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_one_deposit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindOneDepositConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindOneDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_one_deposit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositFindById({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_find_by_id(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositFindByIdConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositFindByIdConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_find_by_id",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> countDeposit({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_count_deposit(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCountDepositConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCountDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "count_deposit",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> countAllDeposit({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_count_all_deposit(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCountAllDepositConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCountAllDepositConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "count_all_deposit",
        argNames: [],
      );

  Future<Uint8List> depositUpdate({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_update(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositUpdateConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositUpdateConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_update",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositUpdateBatch({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_update_batch(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositUpdateBatchConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositUpdateBatchConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_update_batch",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositUpdateByFilter({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_update_by_filter(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositUpdateByFilterConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositUpdateByFilterConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_update_by_filter",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositUpdateAll({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_update_all(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositUpdateAllConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositUpdateAllConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_update_all",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositDelete({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_delete(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositDeleteConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositDeleteConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_delete",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositDeleteBatch({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_delete_batch(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositDeleteBatchConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositDeleteBatchConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_delete_batch",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositDeleteByFilter({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_delete_by_filter(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositDeleteByFilterConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositDeleteByFilterConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_delete_by_filter",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> depositDeleteAll({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deposit_delete_all(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kDepositDeleteAllConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDepositDeleteAllConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deposit_delete_all",
        argNames: [],
      );

  Future<Uint8List> scannerScan({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_scanner_scan(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kScannerScanConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kScannerScanConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "scanner_scan",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> scannerReset({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_scanner_reset(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kScannerResetConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kScannerResetConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "scanner_reset",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> balance({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_balance(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kBalanceConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kBalanceConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "balance",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> assets({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_assets(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kAssetsConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kAssetsConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "assets",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> chainAssets({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_chain_assets(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kChainAssetsConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kChainAssetsConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "chain_assets",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> quoteSpend({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_quote_spend(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kQuoteSpendConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kQuoteSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "quote_spend",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> summarySpend({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_summary_spend(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSummarySpendConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSummarySpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "summary_spend",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> createSpend({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_create_spend(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCreateSpendConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "create_spend",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> sendSpend({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_spend(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSendSpendConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "send_spend",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> sendSpendWithGrpc({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_spend_with_grpc(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSendSpendWithGrpcConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendSpendWithGrpcConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "send_spend_with_grpc",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findSpend({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_spend(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindSpendConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_spend",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> findAllSpend({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_all_spend(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindAllSpendConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindAllSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_all_spend",
        argNames: [],
      );

  Future<Uint8List> findOneSpend({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_find_one_spend(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kFindOneSpendConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kFindOneSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "find_one_spend",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendFindById({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_find_by_id(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendFindByIdConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendFindByIdConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_find_by_id",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> countSpend({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_count_spend(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCountSpendConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCountSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "count_spend",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> countAllSpend({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_count_all_spend(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCountAllSpendConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCountAllSpendConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "count_all_spend",
        argNames: [],
      );

  Future<Uint8List> spendUpdate({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_update(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendUpdateConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendUpdateConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_update",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendUpdateBatch({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_update_batch(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendUpdateBatchConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendUpdateBatchConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_update_batch",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendUpdateByFilter({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_update_by_filter(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendUpdateByFilterConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendUpdateByFilterConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_update_by_filter",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendUpdateAll({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_update_all(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendUpdateAllConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendUpdateAllConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_update_all",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendDelete({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_delete(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendDeleteConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendDeleteConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_delete",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendDeleteBatch({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_delete_batch(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendDeleteBatchConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendDeleteBatchConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_delete_batch",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendDeleteByFilter({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_delete_by_filter(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendDeleteByFilterConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendDeleteByFilterConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_delete_by_filter",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> spendDeleteAll({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_spend_delete_all(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSpendDeleteAllConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSpendDeleteAllConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "spend_delete_all",
        argNames: [],
      );

  Future<Uint8List> chainSyncedBlock({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_chain_synced_block(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kChainSyncedBlockConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kChainSyncedBlockConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "chain_synced_block",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> contractSyncedBlock({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_contract_synced_block(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kContractSyncedBlockConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kContractSyncedBlockConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "contract_synced_block",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> status({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_status(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kStatusConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kStatusConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "status",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> synchronizerSync({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_synchronizer_sync(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSynchronizerSyncConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSynchronizerSyncConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "synchronizer_sync",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> synchronizerReset({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_synchronizer_reset(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kSynchronizerResetConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSynchronizerResetConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "synchronizer_reset",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> createWallet({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_create_wallet(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCreateWalletConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateWalletConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "create_wallet",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> checkCurrent({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_check_current(port_),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCheckCurrentConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCheckCurrentConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "check_current",
        argNames: [],
      );

  Future<Uint8List> checkPassword({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_check_password(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kCheckPasswordConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCheckPasswordConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "check_password",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> updatePassword({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_update_password(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kUpdatePasswordConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdatePasswordConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "update_password",
        argNames: [
          "request"
        ],
      );

  Future<Uint8List> exportMnemonicPhrase({required Uint8List request, dynamic hint}) {
    var arg0 = _platform.api2wire_uint_8_list(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_export_mnemonic_phrase(port_, arg0),
      parseSuccessData: _wire2api_uint_8_list,
      parseErrorData: null,
      constMeta: kExportMnemonicPhraseConstMeta,
      argValues: [
        request
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kExportMnemonicPhraseConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "export_mnemonic_phrase",
        argNames: [
          "request"
        ],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  bool _wire2api_bool(dynamic raw) {
    return raw as bool;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer
