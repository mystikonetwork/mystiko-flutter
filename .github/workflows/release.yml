name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  # -------------------------- build for macos and ios --------------------------
  build-macos-ios:
    runs-on: macos-latest
    outputs:
      result: ${{ job.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PACKAGES_TOKEN }}
          lfs: true
          submodules: recursive
          persist-credentials: false
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_CIRCUITS }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOS }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOCOL }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOS_DART }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_RUST }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_STATIC_CONFIG }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Run Build MacOS(IOS) Scripts
        run: ./scripts/build-apple.sh
      - name: Generate checksum
        run: shasum -a 256 platform-build/mystiko_lib_bridge.xcframework.zip > mystiko_lib_bridge.xcframework.zip.checksum.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            platform-build/mystiko_lib_bridge.xcframework.zip
            mystiko_lib_bridge.xcframework.zip.checksum.txt
  # -------------------------- build for android --------------------------
  build-android:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ job.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PACKAGES_TOKEN }}
          lfs: true
          submodules: recursive
          persist-credentials: false
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_CIRCUITS }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOS }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOCOL }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOS_DART }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_RUST }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_STATIC_CONFIG }}
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Run Build Android Scripts
        run: ./scripts/build-android.sh
      - name: Generate checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            platform-build/mystiko_lib_bridge-android.tar.gz
          output: mystiko_lib_bridge-android.tar.gz.checksum.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            platform-build/mystiko_lib_bridge-android.tar.gz
            mystiko_lib_bridge-android.tar.gz.checksum.txt
  # -------------------------- build for windows and linux --------------------------
  build-others:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ job.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PACKAGES_TOKEN }}
          lfs: true
          submodules: recursive
          persist-credentials: false
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_CIRCUITS }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOS }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOCOL }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_PROTOS_DART }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_RUST }}
            ${{ secrets.SSH_PRIVATE_KEY_MYSTIKO_STATIC_CONFIG }}
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Run Build Other Scripts
        run: ./scripts/build-other.sh
      - name: Generate checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            platform-build/mystiko_lib_bridge-other.tar.gz
          output: mystiko_lib_bridge-other.tar.gz.checksum.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            platform-build/mystiko_lib_bridge-other.tar.gz
            mystiko_lib_bridge-other.tar.gz.checksum.txt
  # -------------------------- Telegram Notification --------------------------
  telegram-notification:
    runs-on: ubuntu-latest
    needs: [build-macos-ios, build-android, build-others]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PACKAGES_TOKEN }}
          lfs: true
          submodules: recursive
          persist-credentials: false
      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@master
        if: ${{ needs.build-macos-ios.outputs.result == 'failure' || needs.build-android.outputs.result == 'failure' || needs.build-others.outputs.result == 'failure' }}
        with:
          message: ‚ùó Release failed for [${{ github.repository }}](https://github.com/${{ github.repository }}/actions) because of ${{ github.actor }}
          format: markdown
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      - name: Telegram Success Notification
        uses: appleboy/telegram-action@master
        if: ${{ needs.build-macos-ios.outputs.result == 'success' && needs.build-android.outputs.result == 'success' && needs.build-others.outputs.result == 'success' }}
        with:
          message: Release succeeded for [${{ github.repository }}](https://github.com/${{ github.repository }}/actions)
          format: markdown
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
